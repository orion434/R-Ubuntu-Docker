---
version: 2.1

refernces:

  image_config: &image_config

    # make sure to set your Docker Hub username & password in CircleCI,
    # either as project-specific environment variables
    # or as resources in your organization's org-global Context

    IMAGE_NAME: ubuntu-lts-r
    IMAGE_TAG: 0.01
    LINUX_VERSION: UBUNTU_BIONIC

jobs:
  build-image:
    machine: 
    # image: ubuntu-1604:201903-01 
      image: circleci/classic:latest
    environment:
      <<: *image_config

    steps:
      - checkout

# Preparing the Image for the Registry
# > https://circleci.com/docs/2.0/custom-images/#preparing-the-image-for-the-registry
      - run:  docker build -t orion42/$IMAGE_NAME:$IMAGE_TAG .circleci/image/Dockerfile
  #     - run: docker build -t $DOCKER_USERNAME/$IMAGE_NAME:$IMAGE_TAG .

# Pushing the image to the registry 
# > https://circleci.com/docs/2.0/custom-images/#pushing-the-image-to-the-registry

      - run: docker login -u $DOCKER_USERNAME -p $DOCKER_PASSWORD
      - run: docker push $DOCKER_USERNAME/$IMAGE_NAME:$IMAGE_TAG  #&& sleep 10

  #     - store_artifacts:
  #         path: Dockerfile

  # test_image:
  #   docker:
  #     - image: $DOCKER_USERNAME/$IMAGE_NAME:$IMAGE_TAG
  #       environment:
  #         <<: *image_config

  #  steps:
  #    - checkout

  #    - run:
  #        name: start Xvfb for phantomjs test
  #        # command: Xvfb :99
  #        # background: true

  #    - run:
  #        name: bats tests
  #        command: |
  #          mkdir -p test_results/bats
  #          bats scripts/tests.bats | \
  #          perl scripts/tap-to-junit.sh > \
  #          test_results/bats/results.xml

  #    - store_test_results:
  #        path: test_results

  #    - store_artifacts:
  #        path: test_results

workflows:
  version: 2.1
  dockerfile_wizard:
    jobs:
      - build-image
##          context: org-global

    #  - test_image:
    #      context: org-global
    #      requires:
    #        - build
