---
version: 2.1

refernces:
  image_config: &image_config

    IMAGE_USERNAME: orion42   # Username on docker
    IMAGE_NAME: ubuntu-lts-r    # Name of the project on docker
    IMAGE_TAG: 0.04_devtools     #  Docker version tag
    R_LIBS: ./ci_dependencies

  # create_dir_cache_key: &create_dir_cache_key
  #   run:
  #     name: Create md5sum for ci_dependencies directory
  #     command: |
  #       mkdir -p ci_dependencies
  #       ls -laR ci_dependencies > deps_checksum

  # save_cache_ci_dependencies: &save_cache_ci_dependencies
  #   save_cache:
  #     #key: test-cache-v1-{{ .Branch }}-{{ checksum "CACHE_KEY1" }}
  #     key: test-cache-v1-{{ .Branch }}-{{ checksum "deps_checksum" }}
  #     paths:
  #       - ./ci_dependencies

  # restore_cache_ci_dependencies: &restore_cache_ci_dependencies
  #   restore_cache:
  #     # - test-cache-v1-{{ .Branch }}-{{ checksum "CACHE_KEY1" }}
  #     keys:
  #       - test-cache-v1-{{ .Branch }}-{{ checksum "deps_checksum" }}
  #       - test-cache-v1-{{ .Branch }}  # Fallback if not found
  #       - test-cache-v1

jobs:
  build-image:
    machine: 
      image: circleci/classic:latest
    environment:
      <<: *image_config # Import here the configuration parameters

    steps:
      - checkout

      # - *create_dir_cache_key
      # - *restore_cache_ci_dependencies
      - run: pwd
      - run: ls
      
# Preparing the Image for the Registry
# > https://circleci.com/docs/2.0/custom-images/#preparing-the-image-for-the-registry
      - run:  docker build -t $IMAGE_USERNAME/$IMAGE_NAME:$IMAGE_TAG ./
      #- run:  docker build -t $IMAGE_USERNAME/$IMAGE_NAME:$IMAGE_TAG .circleci/image/

# Pushing the image to the registry 
# > https://circleci.com/docs/2.0/custom-images/#pushing-the-image-to-the-registry
# make sure to set your Docker Hub username & password in CircleCI,
# either as project-specific environment variables  or as resources in your organization's org-global Context
      - run: docker login -u $DOCKER_USERNAME -p $DOCKER_PASSWORD
      - run: docker push $DOCKER_USERNAME/$IMAGE_NAME:$IMAGE_TAG  #&& sleep 10

      # - *create_dir_cache_key
      # - *save_cache_ci_dependencies
      # - run: rm deps_checksum  # Delete the temp file with the dir checksum


  #     - store_artifacts:
  #         path: Dockerfile

  test_image:
    docker:
      - image: $DOCKER_USERNAME/$IMAGE_NAME:$IMAGE_TAG
    environment:
      <<: *image_config

    steps:
      - checkout
      - run: cat /etc/*-release # Echo Linux version
      - run: apt list --upgradable
      - run: apt list

  
  #    - store_test_results:
  #        path: test_results

  #    - store_artifacts:
  #        path: test_results

workflows:
  version: 2.1
  deploy_dockerfile:
    jobs:
      - test_image
      #- build-image
      #- test_image:
      #    requires:
      #      - build-image
 #      context: org-global
