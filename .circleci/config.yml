---
version: 2.1

refernces:
  image_config: &image_config

    IMAGE_USERNAME: orion42   # Username on docker
    IMAGE_NAME: ubuntu-lts-r    # Name of the project on docker
    DOCKER_NAME: orion42/ubuntu-lts-r
    IMAGE_TAG: 0.04_devtools     #  Docker version tag
    R_LIBS: ./ci_dependencies

  build_docker: &build_docker
    run:
      name: Build the docker from Dockerfile
      command: |
          docker build  --no-cache=true  \
            --build-arg BUILD_DATE=$(date -u +'%Y-%m-%dT%H:%M:%SZ') \
            --build-arg VCS_REF=$(git rev-parse --short HEAD) \
            -t $DOCKER_NAME:$IMAGE_TAG \
            -t $DOCKER_NAME:alpha \
            -t $DOCKER_NAME:latest 
          docker login -u $DOCKER_USERNAME -p $DOCKER_PASSWORD
          docker push $DOCKER_USERNAME/$IMAGE_NAME:$IMAGE_TAG 

        #--build-arg BUILD_VERSION=${build_version} \  
        # Preparing the Image for the Registry (docker build)
        # > https://circleci.com/docs/2.0/custom-images/#preparing-the-image-for-the-registry
        #
        # Pushing the image to the registry (docker login && docker push)
        # > https://circleci.com/docs/2.0/custom-images/#pushing-the-image-to-the-registry
        # make sure to set your Docker Hub username & password in CircleCI,
        # either as project-specific environment variables  or as resources in your organization's org-global Context
        
        # Multiple tags are allowed: docker build -t latest -t tag2...

jobs:

  build-deploy-docker:
    machine: 
      image: circleci/classic:latest
    environment:
      <<: *image_config # Import here the configuration parameters

    steps:
      - checkout
      - *build_docker

  test_image:
    docker:
      - image: $DOCKER_USERNAME/$IMAGE_NAME:$IMAGE_TAG
    environment:
      <<: *image_config

    steps:
      - checkout
      - run: cat /etc/*-release # Echo Linux version
  
  check_update_docker:  # Check if an update of docker is needed, if so run the build-deploy-docker job
    docker:
      - image: $DOCKER_USERNAME/$IMAGE_NAME:$IMAGE_TAG
    environment:
      <<: *image_config

    steps:
      - checkout
      - run: cat /etc/*-release # Echo Linux version

      # sudo apt update 2>/dev/null | grep packages | cut -d '.' -f 1

      #https://linoxide.com/linux-how-to/list-number-packages-updates-linux/
      - run: |
          printf "Check how many packages can be upgraded\n"
          apt-get -s dist-upgrade | grep "^[[:digit:]]\+ upgraded"
          apt-get -s dist-upgrade | grep -Po "^[[:digit:]]+ (?=upgraded)"

      - run: export pkg_num=$(apt-get -s dist-upgrade | grep -Po "^[[:digit:]]+ (?=upgraded)") && echo $pkg_num 

      - run: |
          export pkg_num=$(apt-get -s dist-upgrade | grep -Po "^[[:digit:]]+ (?=upgraded)") 

          if [  "$pkg_num" ] ; then
            echo "$pkg_num to be upgraded - Proceed to rebuild the docker"

          else
            echo "$pkg_num to be upgraded - No further action" 
          fi

workflows:
  version: 2.1

  deploy_docker:
    jobs:
     
      - build-deploy-docker:
            type: approval # requires that an in-app button be clicked by an appropriate member of the pr

      - test_image:
          requires:
            - build-deploy-docker

  update_docker:
    jobs:
      - check_update_docker
      # https://circleci.com/docs/2.0/triggers/
      #  triggers: #use the triggers key to indicate a scheduled build
      # - schedule:
      #     cron: "0 0 * * *" # use cron syntax to set the schedule for every day nightly 12am UTC (min hh  dd month day_week)
      #     cron: "0 0 1 * *" # Cron-job every 1-st day of the month at 12am UTC
      #     cron: "0 * * * *" # Cron-job every hour

 #      context: org-global
